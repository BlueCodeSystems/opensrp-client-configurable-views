description = 'OpenSRP Configurable Views client library'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:1.3.1"
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
    }
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
        maven {
            url 'https://maven.google.com'
        }
    }
}

configurations {
    compile.exclude group: 'org.ei.drishti', module: 'drishti-interface'
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.8.0"
}

android {
    compileSdkVersion 22
    buildToolsVersion "26.0.2"

    defaultPublishConfig !isReleaseBuild() ? "debug" : "release"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 22
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile project(':json2view')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('org.smartregister:opensrp-client-core:1.1.6-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
    }
    compile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.0'

    compile 'com.android.support:appcompat-v7:22.+'
    compile('com.android.support:design:22.2.+') {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support'

    }

    compile 'com.google.code.gson:gson:2.8.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.5.1'
    testCompile 'org.robolectric:shadows-multidex:3.5.1'

    // PowerMock
    def powerMockVersion = '1.7.3'
    testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
    testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testCompile "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testCompile "org.powermock:powermock-classloading-xstream:$powerMockVersion"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebug', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebug.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}


coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}

apply from: '../maven.gradle'