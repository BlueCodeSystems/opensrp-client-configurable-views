buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        // TODO: Add maven-publish plugin
        // classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

configure(allprojects) { project ->
    buildscript {

        version = VERSION_NAME
        group = GROUP

        repositories {
            google()
            mavenCentral()
            mavenLocal()
        }
    }
}

// TODO: Add maven-publish plugin
// apply plugin: 'io.codearte.nexus-staging'

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {

    group = 'org.smartregister'

    ext.androidToolsBuildGradle = '8.5.0'
    ext.androidBuildToolsVersion = '34.0.0'
    ext.androidMinSdkVersion = 21
    ext.androidCompileSdkVersion = 34
    ext.androidTargetSdkVersion = 34

    ext.androidAnnotationsVersion = '3.0.1'
    ext.androidAnnotationsAPIVersion = '3.0.1'

    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://nexus.motechproject.org/content/repositories/drishti" }
        // Removed snapshots repository; all dependencies resolve from stable repos
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        mavenLocal()
    }

    // dexOptions has been removed as it's obsolete in newer Android Gradle Plugin versions
    // The Android Gradle plugin optimizes dexing automatically

    // Workaround: Jetifier fails on Jackson 2.17+ MRJARs (class version 65).
    // Pin Jackson to 2.16.1 which is Java 8 compatible and avoids MRJAR entries.
    configurations.all {
        resolutionStrategy {
            force 'com.fasterxml.jackson.core:jackson-core:2.16.1'
            force 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'
            force 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}
